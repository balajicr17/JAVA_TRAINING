1) LIST -Interface-Index based
===================

1) ArrayList
2)LinkedList
3)Vector

These are Predefined classed which are available from LIST Interface.

================================================================================

** Stores the value which is index based
** It allows duplciate values to store in single List
** It prints Insertion order.

Synatax:
=======
List emptyList = new List();

1) Array List:
================

Synatax:
========

ArrayList emptyList = new ArrayList();

package testPackage;

import java.util.ArrayList;

public class List {
	
	
	public static void main(String[] args) {
		
		//create Empty List
		
		ArrayList emptyList = new ArrayList();
		
		emptyList.add(10);
		emptyList.add("test");
		emptyList.add(10.54f);
		emptyList.add(10);
		emptyList.add('c');
		emptyList.add(9095702844l);
		
		System.out.println(emptyList);
		
		
		
		
		
		
	}

}

========================================================================================

1)add()-To add the values into ArrayList
2)get()-To get the value from ArrayList
3)size()-get the size of the arrayList
4)remove()-which used to delete value from arraylist based on index which we pass
5)contains()-Check the value which are present at ArrayLsit or not
6)index of and LastIndexof->
7)isEmpty-> ArrayLsit is Empty or Not
8)clear()->clean the List
9)removeAll()->
============================================================================================

ArrayList:->Index based
==========
1) Insertion and deletions both are worst case
2) searching and Retriving are easy or best case

Linked List:->Node based
==============
1) Insertion and deletion are best case
2) Searching and Retriving are worst case

Vector:
======
i) Synchronized and Thread Safe

ArryList: Asunchronized and not thread safe.
============================================================================================


